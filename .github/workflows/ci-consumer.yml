name: CI Consumer

on:
  pull_request:
    branches:
      - main

jobs:
  build-consumer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Maven dependency cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project
        run: mvn clean install -DskipTests

      - name: Run unit tests
        run: mvn -B test

      - name: Run Docker Compose
        run: docker compose up -d
        working-directory: .

      - name: Validate Spring Boot startup
        run: |
          echo "Starting Spring Boot..."
          sleep 10
          
          mvn spring-boot:run > spring-boot.log 2>&1 &
          SPRING_PID=$!
          echo "Waiting for Spring Boot to start..."
          
          for i in {1..30}; do
            if nc -z localhost 8082; then
              echo "Spring Boot is up!"
              break
            fi
            sleep 1
          done
          
          if ! nc -z localhost 8082; then
            echo -e "\e[31mSpring Boot failed to start in 30 seconds\e[0m"
            echo "==== Spring Boot logs ===="          
            sed -e 's/.*ERROR.*/\x1b[31m&\x1b[0m/' \
                -e 's/.*WARN.*/\x1b[33m&\x1b[0m/' spring-boot.log
            kill $SPRING_PID
            exit 1
          fi
          
          echo "==== Spring Boot logs ===="
          sed -e 's/.*ERROR.*/\x1b[31m&\x1b[0m/' \
              -e 's/.*WARN.*/\x1b[33m&\x1b[0m/' spring-boot.log
          
          # Kill the Spring Boot process
          kill $SPRING_PID
        shell: bash
        working-directory: ./consumer